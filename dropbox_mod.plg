<?xml version='1.0' standalone='yes'?><PLUGIN><!--2011-10-17 		- first release2012-05-31-ww 	- added datacheck function + info about size of install and data directories + layout modificationThe plugin provides dropbox support for unRAID systems.--><FILE Name="/boot/config/plugins/dropbox/dropbox.tgz" Run="tar -C /root -zxf"><URL>--no-check-certificate https://www.dropbox.com/download?plat=lnx.x86</URL></FILE><FILE Name="/boot/config/plugins/dropbox/dropbox.py" ><URL>--no-check-certificate https://www.dropbox.com/download?dl=packages/dropbox.py</URL></FILE><FILE Name="/boot/packages/python-2.6.6-i486-1.txz" Run="upgradepkg --install-new"><URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/d/python-2.6.6-i486-1.txz</URL><MD5>b8de0c9f8b89aa7b3c89823d20076867</MD5></FILE><FILE Name="/boot/config/plugins/dropbox/dropbox.png"><URL>http://lime-technology.com/wiki/images/0/0a/Dropbox.png</URL></FILE><FILE Name="/usr/local/sbin/dropbox.py" Mode="0770"><LOCAL>/boot/config/plugins/dropbox/dropbox.py</LOCAL></FILE><FILE Name="/boot/config/plugins/dropbox/dropbox.cfg"><INLINE><![CDATA[# dropbox configurationSERVICE="disable"DROPBOXDBDIR="/mnt/disk1/.dropbox"DROPBOXDIR=/mnt/disk1/Dropbox"]]></INLINE></FILE><FILE Name="/tmp/dropbox-upgrade" Run="/bin/bash"><INLINE><![CDATA[#Remove currently installed plugin files[ -d /usr/local/emhttp/plugins/dropbox/ ] && rm -rf /usr/local/emhttp/plugins/dropboxrm /tmp/dropbox-upgrade]]></INLINE></FILE><FILE Name="/usr/local/emhttp/plugins/dropbox/dropbox.png"><LOCAL>/boot/config/plugins/dropbox/dropbox.png</LOCAL></FILE><FILE Name="/etc/rc.d/rc.dropbox" Mode="0770"><INLINE><![CDATA[#!/bin/shdropbox_datacheck(){	DATA=`cat /boot/config/plugins/dropbox/dropbox.cfg | grep 'DROPBOXDIR' | cut -d'"' -f2`		array=( ramfs proc tempfs sysfs )	fs=$( stat -f -c '%T' $DATA )	for i in "${array[@]}"	do		if [ $i = $fs ]; then		    echo "<p style="color:red\;margin-left:10px\;"><b>WARNING:</b> Your Data Directory is not persistent and WILL NOT survive a reboot. Please locate Data Directory on disk for persistency</p>"			break		elif [ $i = msdos ]; then			echo "<p style="color:red\;margin-left:10px\;"><b>WARNING:</b> Your Data Directory is located on your flash drive. This will decrease your flash drives life span!</p>"			break		else			echo "<p style="color:green\;margin-left:10px\;">Your data will persist after a reboot</p>"			break		fi	done}# read our configurationsource /boot/config/plugins/dropbox/dropbox.cfgcase "$1" in	'datacheck')		dropbox_datacheck	;;	*)		echo "usage $0 datacheck"esac]]></INLINE></FILE><FILE Name="/usr/local/emhttp/plugins/dropbox/dropbox.page"><INLINE><![CDATA[Menu="NetworkServices"Icon="dropbox.png"Version="0.2"Author="SeeDrs; Wojciech Walaszek"Type="php"Title="Dropbox"]]></INLINE></FILE><FILE Name="/usr/local/emhttp/plugins/dropbox/dropbox.php"><INLINE><![CDATA[<?PHP$dropbox_cfg = parse_ini_file( "/boot/config/plugins/dropbox/dropbox.cfg");$dropbox_running = "yes";$dropbox_installed = file_exists( "/usr/local/sbin/dropbox.py" ) ? "yes" : "no";if ($dropbox_installed=="yes"){	$status = exec("HOME=/root; /usr/local/sbin/dropbox.py status;");	switch ($status)	{		case "Waiting to be linked to an account...":			$activation = exec("HOME=/root; /usr/local/sbin/dropbox.py start;");			break;		case "Dropbox isn't running!":			$dropbox_running = "no";			break;	}	$dropbox_datacheck = shell_exec( "/etc/rc.d/rc.dropbox datacheck" );	$dropbox_version = shell_exec( "`echo cat /root/.dropbox-dist/VERSION`" );	$dropbox_installdirsize = trim(shell_exec( "if [ -e $dropbox_cfg[DROPBOXDBDIR] ]; then du -sh $dropbox_cfg[DROPBOXDBDIR] | cut -f1; else echo 0; fi"));	$dropbox_datadirsize = trim(shell_exec( "if [ -e $dropbox_cfg[DROPBOXDIR] ]; then du -sh $dropbox_cfg[DROPBOXDIR] | cut -f1; else echo 0; fi"));}?><br />	<form name="dropbox_settings" method="POST" action="/plugins/dropbox/dropboxctl.php" target="progressFrame">		<input type="hidden" name="cmd" value="apply">		<table class="settings">			<tr>				<td>Enable Dropbox:</td>				<td>					<select name="SERVICE" size="1"  onChange="checkRUNNING(this.form);">						<?=mk_option($dropbox_cfg['SERVICE'], "disable", "No");?>						<?=mk_option($dropbox_cfg['SERVICE'], "enable", "Yes");?>					</select>				</td>			</tr>			<tr>				<td>Install Directory:</td>				<td><input type="text" name="DROPBOXDBDIR" value="<?=$dropbox_cfg['DROPBOXDBDIR'];?>"></td>			</tr>			<tr>				<td>Data Directory</td>				<td><input type="text" name="DROPBOXDIR" value="<?=$dropbox_cfg['DROPBOXDIR'];?>"></td>			</tr>			<tr>				<td></td>				<td><input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</button></td>			</tr>		</table>	</form>    <hr><div id="title"><span class="left">Status:<?if ($dropbox_running=="yes"):?>  <span class="green"><b>RUNNING</b></span><span> with version: <b><?=$dropbox_version;?></b></span><?else:?>  <span class="red"><b>STOPPED</b></span><?endif;?></span></div><? if ($dropbox_installed=="yes"): ?>		<? if ($dropbox_running=="yes"): ?>		<p style="margin-left:10px;">Status: <b><?=$status;?></b></p>		<? if ($activation): ?>				<p style="margin-left:10px;">Activation URL: <a href="<?=$activation;?>"><?=$activation;?></a></p>		<? endif; ?>	<? endif; ?>	<? if ($dropbox_installdirsize!=0 && $dropbox_installdirsize!=""): ?>		<? if ($dropbox_cfg["DROPBOXDBDIR"] == $dropbox_cfg["DROPBOXDIR"]): ?>			<p style="margin-left:10px;">Dropbox storage memory usage: install + data directory: <b><?=$dropbox_installdirsize?></b></p>		<? else: ?>			<p style="margin-left:10px;">Dropbox storage memory usage: install directory: <b><?=$dropbox_installdirsize?></b>, data directory: <b><?=$dropbox_datadirsize?></b></p>		<? endif; ?>	<? endif; ?>	<?=$dropbox_datacheck?><? else: ?>	<p style="margin-left:10px;"><b>Dropbox is not installed</b></p><? endif; ?><script type="text/javascript">function checkRUNNING(form){   if ("<?=$dropbox_running;?>" == "yes") {    form.DROPBOXDIR.readOnly = true;    form.DROPBOXDBDIR.readOnly = true;   }   else {      form.DROPBOXDIR.readOnly = (form.SERVICE.value == "enable");      form.DROPBOXDBDIR.readOnly = (form.SERVICE.value == "enable");   }}checkRUNNING(document.dropbox_settings);</script>]]></INLINE></FILE><FILE Name="/usr/local/emhttp/plugins/dropbox/dropboxctl.php"><INLINE><![CDATA[<?PHP	$logfile = "/var/log/plugins/dropbox";	$configfile = "/boot/config/plugins/dropbox/dropbox.cfg";	if (empty($_SERVER['SHELL']))		$newline = "<br>";	else		$newline = "\n";	$cur_dt = date("F j\, Y h:i:s A");	write_log("\nStart: $cur_dt");  	$settings = array(		"SERVICE",		"DROPBOXDIR",		"DROPBOXDBDIR"	);	parse_str($argv[1],$_POST);  	$CMD = $_POST['cmd'];	if ($CMD  == "autostart")		$_POST = parse_ini_file( "/boot/config/plugins/dropbox/dropbox.cfg");  	$SERVICE=$_POST['SERVICE'];	$DROPBOXDIR=$_POST['DROPBOXDIR'];	$DROPBOXDBDIR=$_POST['DROPBOXDBDIR'];	switch ($CMD)	{		case 'autostart';		case 'apply':			saveconfig();			applyconfig();      			if ($SERVICE == "enable")				startdropbox();			else				stopdropbox();		break;		case 'start':		break;		case 'stop':			stopdropbox();		break;		case 'enable':		break;		case 'disable':		break;		default:		break;	}	if (empty($_SERVER['SHELL']))	{		echo("<html>");		echo("<head><script>var goback=parent.location;</script></head>");		echo("<body onLoad=\"parent.location=goback;\"></body>");		echo("</html>");	}  	$cur_dt = date("F j\, Y h:i:s A");	write_log("\nEnd: $cur_dt");  	function startdropbox()	{		global $newline, $log;		echo("Starting dropbox...");		exec_log("HOME=/root; /usr/local/sbin/dropbox.py start;");		sleep(3);		echo("Completed$newline");	}  	function stopdropbox()	{		global $newline, $log;		echo("Stopping dropbox...");		exec_log("HOME=/root; /usr/local/sbin/dropbox.py stop;");		echo("Completed$newline");	}  	function applyconfig()	{		global $newline, $log, $DROPBOXDIR, $DROPBOXDBDIR;		echo("Applying Config...");		exec_log("rm -rf /root/.dropbox");		exec_log("rm -rf /root/Dropbox");		if (!is_dir($DROPBOXDIR))			mkdir($DROPBOXDIR, 0777, true);		if (!is_dir($DROPBOXDBDIR))			mkdir($DROPBOXDBDIR, 0777, true);      		exec_log("ln -s $DROPBOXDBDIR /root/.dropbox");		exec_log("ln -s $DROPBOXDIR /root/Dropbox");		echo("Completed$newline");	}  	function saveconfig ()	{		echo("Saving Settings...");		global $_POST, $configfile, $settings, $newline;		$string .= "#dropbox configuration\n";		foreach ($_POST as $key=>$value)		{			if (in_array($key, $settings))			{				$string .= "$key=\"$value\"\n";			}		}    		write_string($configfile, $string, TRUE);		echo("Completed$newline ");	}  	function exec_log($cmd)	{		$results = exec($cmd);		$results = "\nCMD: $cmd \nResults: $results";		write_log($results);	}	function write_log($contents)	{		global $logfile;		write_string($logfile, "$contents\n", FALSE);	}    	function write_string ($file, $contents, $overwrite)	{		if (file_exists($file))		{			if ($overwrite)				unlink($file);			touch($file);		}			else		{			touch($file);		}		$fp = @fopen($file, 'a');		@flock($fp, LOCK_EX);		@fwrite($fp, $contents);		@flock($fp, LOCK_UN);		@fclose($fp);	}?>]]></INLINE></FILE><!-- event handler --><FILE Name="/usr/local/emhttp/plugins/dropbox/event/disks_mounted" Mode="0770"><INLINE><![CDATA[#!/bin/bashecho 100000 > /proc/sys/fs/inotify/max_user_watchesphp /usr/local/emhttp/plugins/dropbox/dropboxctl.php "cmd=autostart"]]></INLINE></FILE><!-- event handler --><FILE Name="/usr/local/emhttp/plugins/dropbox/event/unmounting_disks" Mode="0770"><INLINE><![CDATA[#!/bin/bashphp /usr/local/emhttp/plugins/dropbox/dropboxctl.php "cmd=stop"]]></INLINE></FILE><FILE Name="/var/log/plugins/dropbox"><INLINE><![CDATA[]]></INLINE></FILE></PLUGIN>