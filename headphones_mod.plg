<?xml version='1.0' standalone='yes'?>
<PLUGIN>

<!--
2012-04-14 - headphones-0.1-influenced - First release, packages for auto-update are commented out as may be larger than wanted
2012-05-24 - 0.2-ww		       		   - added newest dependencies + install and data dir sizes + some improvements
2012-05-24 - 0.3-influenced			   - added message indicated if data directory will survuve a reboot or not
2012-05-25-ww						   - added some layou modifications  
2012-05-29-ww			 			   - little fixes

This Plugin installs and controls headphones for UnRaid.
All dependencies are installed as needed and everything is controlable from the webgui
-->

<FILE Name="/boot/packages/python-2.6.6-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/d/python-2.6.6-i486-1.txz</URL>
<MD5>b8de0c9f8b89aa7b3c89823d20076867</MD5>
</FILE>
<FILE Name="/boot/packages/sqlite-3.7.5-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/ap/sqlite-3.7.5-i486-1.txz</URL>
<MD5>6786d3764cb294ecb71cdd24e6d171d1</MD5>
</FILE>
<FILE Name="/boot/packages/curl-7.21.4-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.osuosl.org/slackware-13.37/slackware/n/curl-7.21.4-i486-1.txz</URL>
<MD5>e32449e0588ef54df8524827028972e8</MD5>
</FILE>
<FILE Name="/boot/packages/git-1.7.4.4-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.osuosl.org/slackware-13.37/slackware/d/git-1.7.4.4-i486-1.txz</URL>
<MD5>5d92bd44e67618dfdacc2e2fa9a41821</MD5>
</FILE>

<FILE Name="/boot/config/plugins/headphones/headphones.png">
<URL>http://img513.imageshack.us/img513/3190/headphoneslogo.png</URL>
</FILE>

<!-- clean up previous install -->
<FILE Name="/tmp/headphones-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
rm -f /etc/rc.d/rc.headphones
rm -f -R /usr/local/emhttp/plugins/headphones
rm /tmp/headphones-cleanup
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/headphones/headphones.cfg">
<INLINE>
<![CDATA[
# headphones configuration
SERVICE="disable"
INSTALLDIR="/usr/local/headphones"
DATADIR="/usr/local/headphones"
PORT="8084"
RUNAS="nobody"
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.headphones" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh
# Start/stop/restart/enable/disable headphones.

headphones_start()
{
	# no-op if not enabled
	if [ $SERVICE != "enable" ]; then
		return
	fi

	# no-op if already running
	if [ -r /var/run/headphones/headphones-$PORT.pid ]; then
		return
	fi
	
	# if directory doesn't exist or headphones is not found, install it
	if [[ "$INSTALLDIR" != "" &&  ! -e "$INSTALLDIR/Headphones.py" ]]; then
		headphones_install
	fi
	
	if [ ! -d $DATADIR ]; then
		mkdir $DATADIR
        chown -R nobody:users $DATADIR
	    chmod -R 777 $DATADIR
	fi

	CMDLINE="sudo -u $RUNAS python $INSTALLDIR/Headphones.py -d -p $PORT --datadir $DATADIR --nolaunch --pidfile /var/run/headphones/headphones-$PORT.pid"
	echo -n "Starting headphones:  $CMDLINE"
	$CMDLINE
	echo
  
	while [ ! -e /var/run/headphones/headphones-$PORT.pid  ]; do
		sleep 1
	done
}

headphones_stop()
{
	# no-op if not running
	if [ ! -r /var/run/headphones/headphones-$PORT.pid ]; then
		return
	fi
	
	echo -n "Stopping headphones..."
	sleep 0.5
 	echo
	kill $(cat /var/run/headphones/headphones-$PORT.pid)
	echo
  
	sleep 1
  
	if [ -f /var/run/headphones/headphones-$PORT.pid ]; then
		rm /var/run/headphones/headphones-$PORT.pid
	fi
  
	while [ -e /var/run/headphones/headphones-$PORT.pid  ]; do
		sleep 1
	done
}

headphones_restart()
{
	headphones_stop
	sleep 1
	headphones_start
}

headphones_update()
{
	headphones_stop
	sleep 1
	headphones_install
	sleep 1
	headphones_start
}

write_config()
{
	echo "# headphones configuration" > /boot/config/plugins/headphones/headphones.cfg
	echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/headphones/headphones.cfg
	echo "INSTALLDIR=\"$INSTALLDIR\"" >> /boot/config/plugins/headphones/headphones.cfg
	echo "DATADIR=\"$DATADIR\"" >> /boot/config/plugins/headphones/headphones.cfg
	echo "PORT=\"$PORT\"" >> /boot/config/plugins/headphones/headphones.cfg
	echo "RUNAS=\"$RUNAS\"" >> /boot/config/plugins/headphones/headphones.cfg
 }

headphones_enable()
{
	# if not already enabled, enable it
	if [ "$SERVICE" != "enable" ]; then
		SERVICE=enable
  
		PORT="$2"
		INSTALLDIR="$3"
		DATADIR="$4"

		if [ $DATADIR == "" ]; then
			$DATADIR=$INSTALLDIR
		fi
	
		if [ $RUNAS != $1 ]; then
			chown -R $1:users "$INSTALLDIR"
		fi
	
		RUNAS="$1"
	
		# create headphones user if necessary
		if [[ $RUNAS != "nobody" && $RUNAS != "root" ]]; then
			if ( ! grep -q ^$RUNAS /etc/passwd ); then
				useradd -r -g users -d / -s /bin/false $RUNAS &> /dev/null
				cp /etc/passwd /etc/shadow /boot/config
			fi
		fi
	
		write_config
	fi

	# enabling also starts it
	headphones_start
}

headphones_disable()
{
	headphones_stop
	SERVICE=disable
	write_config
}

headphones_install()
{	
	echo "installing latest Version of headphones"
	
	if [ ! -e "$INSTALLDIR" ]; then 
		mkdir -p $INSTALLDIR
    fi
	if [ ! -e "$DATADIR" ]; then 
		mkdir -p $DATADIR
    fi
	
	if [ -e ""$DATADIR"/version.txt" ]; then 
		echo "removing old version"
		rm ""$DATADIR"/version.txt"
	fi
	
	cd /tmp
	git clone https://github.com/rembo10/headphones/
	cp -Rf /tmp/headphones/* $INSTALLDIR
	rm -Rf /tmp/headphones
	chown -R $RUNAS:users "$INSTALLDIR" "$DATADIR"
}
headphones_datacheck() 
{
	array=( ramfs proc tempfs sysfs )
	fs=$( stat -f -c '%T' $DATADIR )
	for i in "${array[@]}"
	do
		if [ $i = $fs ]; then
		    echo "<p style="color:red\;margin-left:10px\;"><b>WARNING:</b> Your Data Directory is not persistent and WILL NOT survive a reboot. Please locate Data Directory on disk for persistency</p>"
			break
		elif [ $i = msdos ]; then
			echo "<p style="color:red\;margin-left:10px\;"><b>WARNING:</b> Your Data Directory is located on your flash drive. This will decrease your flash drives life span!</p>"
			break
		else
			echo "<p style="color:green\;margin-left:10px\;">Your data will persist after a reboot</p>"
			break
		fi
	done
}
# read our configuration
source /boot/config/plugins/headphones/headphones.cfg

case "$1" in
	'start')
		headphones_start
	;;
	'stop')
		headphones_stop
	;;
	'restart')
		headphones_restart
	;;
	'enable')
		headphones_enable $2 $3 $4 $5
	;;
	'disable')
		headphones_disable
	;;
	'install')
		headphones_install
	;;
	'update')
		headphones_update
	;;
	'datacheck')
		headphones_datacheck
	;;
	*)
		echo "usage $0 start|stop|restart|enable|disable|install|update|datacheck"
esac
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/headphones/headphones.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="headphones.png"
Version="0.2"
Author="Influence; Wojciech Walaszek"
Type="php"
Title="Headphones"
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/headphones/headphones.png">
<LOCAL>/boot/config/plugins/headphones/headphones.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/headphones/headphones.php">
<INLINE>
<![CDATA[
<?PHP
$headphones_cfg = parse_ini_file( "/boot/config/plugins/headphones/headphones.cfg");
$headphones_installed = file_exists( $headphones_cfg["INSTALLDIR"] . "/Headphones.py" ) ? "yes" : "no";
if ($headphones_installed=="yes")
{
	$headphones_datacheck = shell_exec ( "/etc/rc.d/rc.headphones datacheck" );
	$headphones_running = file_exists( "/var/run/headphones/headphones-".$headphones_cfg['PORT'].".pid") ? "yes" : "no";
	if (file_exists($headphones_cfg["DATADIR"] . "/version.txt"))
		$headphones_curversion = trim(shell_exec( "cat $headphones_cfg[DATADIR]/version.txt" ));
	else
		$headphones_curversion = "couldn't determine the Headphones version, please run Update at the bottom of the Headphones web page first"; 
	$headphones_newversion = trim(shell_exec( "cd /tmp/ && wget -q -O feed.atom --no-check-certificate https://github.com/rembo10/headphones/commits/master.atom && cat feed.atom | sed -n 's|tag:github.com,2008:Grit::Commit/\(.*\)|\\1|p' | sed '1q;d' | cut -d' ' -f5- | sed 's/....\(.*\)...../\\1/' && rm feed.atom" ));		
	$headphones_installdirsize = trim(shell_exec( "if [ -e $headphones_cfg[INSTALLDIR] ]; then du -sh $headphones_cfg[INSTALLDIR] | cut -f1; else echo 0; fi"));
	$headphones_datadirsize = trim(shell_exec( "if [ -e $headphones_cfg[DATADIR] ]; then du -sh $headphones_cfg[DATADIR] | cut -f1; else echo 0; fi" ));
}
?>
	<form name="headphones_settings" method="POST" action="/update.htm" target="progressFrame">
		<input type="hidden" name="cmd" value="/etc/rc.d/rc.headphones">
		<table class="settings">
			<tr>
				<td>Enable Headphones:</td>
				<td>
					<select name="arg1" size="1" onChange="checkINSTALLDIR(this.form);">
						<?=mk_option($headphones_cfg['SERVICE'], "disable", "No");?>
						<?=mk_option($headphones_cfg['SERVICE'], "enable", "Yes");?>
					</select>
				</td>
			</tr>
			<tr>
				<td>Install directory:</td>
				<td><input type="text" name="arg4" maxlength="60" value="<?=$headphones_cfg['INSTALLDIR'];?>"></td>
			</tr>
			<tr>
				<td>Data directory:</td>
				<td><input type="checkbox" name="use_data" <?=($headphones_cfg['DATADIR']!=$headphones_cfg['INSTALLDIR'])?"checked=\"checked\"":"";?>  onChange="checkDATADIR(this.form);"> <input type="text" name="arg5" maxlength="60" value="<?=$headphones_cfg['DATADIR'];?>"></td>
			</tr>
			<tr>
				<td>Port:</td>
				<td><input type="text" name="arg3" maxlength="40" value="<?=$headphones_cfg['PORT'];?>"></td>
			</tr>
			<tr>
				<td>Run as user:</td>
				<td>
					<select name="runas" size="1"  onChange="checkUSER(this.form);">
						<?=mk_option($headphones_cfg['RUNAS'], "nobody", "nobody");?>
						<?=mk_option($headphones_cfg['RUNAS'], "root", "root");?>
						<option value='other'<?=($headphones_cfg['RUNAS'] != "root" && $headphones_cfg['RUNAS'] != "nobody")?" selected=yes":"" ;?>>other</option>
					</select>
					<input type="text" name="arg2" maxlength="40" value="<?=$headphones_cfg['RUNAS'];?>">
				</td>
			</tr>
			<tr>
				<td></td>
				<td><input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</button></td>
			</tr>
		</table>
	</form>
	<hr>
<div id="title"><span class="left">Status:
<?if ($headphones_running=="yes"):?>
  <a href="http://<?=$var['NAME'];?>:<?=$headphones_cfg['PORT'];?>" target="_blank"><span class="green"><b>RUNNING</b></span></a><span> with version: <b><?=$headphones_curversion;?></b></span>
<?else:?>
  <span class="red"><b>STOPPED</b></span>
<?endif;?>
</span></div>
<? if ($headphones_installed=="yes"): ?>	
	<? if ($headphones_installdirsize!=0 && $headphones_installdirsize!=""): ?>
		<? if ($headphones_cfg["INSTALLDIR"] == $headphones_cfg["DATADIR"]): ?>
			<p style="margin-left:10px;">Headphones storage memory usage: install + data directory: <b><?=$headphones_installdirsize?></b></p>
		<? else: ?>
			<p style="margin-left:10px;">Headphones storage memory usage: install directory: <b><?=$headphones_installdirsize?></b>, data directory: <b><?=$headphones_datadirsize?></b></p>
		<? endif; ?>
	<? endif; ?>
	<?=$headphones_datacheck?>
	<? if (strcmp($headphones_curversion, $headphones_newversion)!=0 && $headphones_curversion!="couldn't determine the Headphones version, please run Update at the bottom of the Headphones web page first"): ?>
		<form name="headphones_settings" method="POST" action="/update.htm" target="progressFrame">
			<input type="hidden" name="cmd" value="/etc/rc.d/rc.headphones update">
			<p style="font-size:14px;color:blue;margin-left:10px;">Update available to version: <b><?=$headphones_newversion;?></b></p>
			<table style="align:center;">
				<tr>
					<td><input type="submit" name="runCmd" value="Update"><button type="button" onClick="done();">Done</button></td>
				</tr>
			</table>
		</form>	 
	<? endif; ?>
<? else: ?>
	<p style="margin-left:10px;"><b>Headphones is not installed</b></p>
<? endif; ?>	

<script type="text/javascript">
function checkINSTALLDIR(form)
{
   if ("<?=$headphones_running;?>" == "yes")
   {
		form.arg2.readOnly = true;
		form.arg3.readOnly = true;
		form.arg4.readOnly = true;
		form.arg5.readOnly = true;
		form.runas.disabled = true;
		form.use_data.disabled = true;
   }
   else
   {
		form.arg2.readOnly = (form.arg1.value == "enable");
		form.arg3.readOnly = (form.arg1.value == "enable");
		form.arg4.readOnly = (form.arg1.value == "enable");
		form.arg5.readOnly = (form.arg1.value == "enable");
		form.runas.disabled = (form.arg1.value == "enable");
		form.use_data.disabled = (form.arg1.value == "enable");
	}
}

function checkUSER(form)
{
	if (form.runas.selectedIndex < 2 )
	{
		form.arg2.value = form.runas.options[form.runas.selectedIndex].value;
		form.arg2.type = "hidden";
	}
	else
	{
		form.arg2.value = "<?=$headphones_cfg['RUNAS'];?>";
		form.arg2.type = "text";
	}
}

function checkDATADIR(form)
{
	if (form.use_data.checked == false )
	{
		form.arg5.value = form.arg4.value;;
		form.arg5.type = "hidden";
	}
	else
	{
		form.arg5.value = "<?=$headphones_cfg['DATADIR'];?>";
		form.arg5.type = "text";
	}
}

checkINSTALLDIR(document.headphones_settings);
checkUSER(document.headphones_settings);
checkDATADIR(document.headphones_settings);
</script>
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/headphones/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.headphones start
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/headphones/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.headphones stop
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/headphones-install" Run="/bin/bash">
<INLINE>
<![CDATA[
# include our config vars
source /boot/config/plugins/headphones/headphones.cfg

# create headphones-writable directory for pid file
if [ ! -e /var/run/headphones ]; then
  mkdir /var/run/headphones
  chown $RUNAS:users /var/run/headphones
  chmod 0777 /var/run/headphones
fi
rm /tmp/headphones-install
]]>
</INLINE>
</FILE>

<FILE Name="/var/log/plugins/headphones">
<INLINE>
<![CDATA[

]]>
</INLINE>
</FILE>

</PLUGIN>