<?xml version='1.0' standalone='yes'?>
<PLUGIN>

<!--
2012-05-10 0.1-ww 	     - first release based on couchpotato-0.5-i468-bw.plg - thanks to Benjamin Waller
2012-05-11 0.2-ww	     - some improvements
2012-05-14 0.2a-ww	     - added version informations
2012-05-17 0.3-ww	     - added lots of improvments + storage/memory used by install & data dirs
2012-05-17 0.4-influnced - Added message indicating whether data directory will survive a reboot or will be lost
2012-05-25-ww			 - put some fixes + layout modifications
2012-05-29-ww			 - little fixes

This Plugin installs and controls CouchPotato v2 for unRaid.
All dependencies are installed as needed and everything is controlable from the webgui
-->

<FILE Name="/boot/packages/python-2.6.6-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/d/python-2.6.6-i486-1.txz</URL>
<MD5>b8de0c9f8b89aa7b3c89823d20076867</MD5>
</FILE>
<FILE Name="/boot/packages/sqlite-3.7.5-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/ap/sqlite-3.7.5-i486-1.txz</URL>
<MD5>6786d3764cb294ecb71cdd24e6d171d1</MD5>
</FILE>
<FILE Name="/boot/packages/curl-7.21.4-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.osuosl.org/slackware-13.37/slackware/n/curl-7.21.4-i486-1.txz</URL>
<MD5>e32449e0588ef54df8524827028972e8</MD5>
</FILE>
<FILE Name="/boot/packages/git-1.7.4.4-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.osuosl.org/slackware-13.37/slackware/d/git-1.7.4.4-i486-1.txz</URL>
<MD5>5d92bd44e67618dfdacc2e2fa9a41821</MD5>
</FILE>
<FILE Name="/boot/config/plugins/couchpotato_v2/couchpotato_logo.png">
<URL>http://dl.dropbox.com/u/49442039/couchpotato_logo.png</URL>
</FILE>

<!-- clean up previous install -->
<FILE Name="/tmp/couchpotato_v2-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
rm -f /etc/rc.d/rc.couchpotato_v2
rm -f -R /usr/local/emhttp/plugins/couchpotato_v2
rm /tmp/couchpotato_v2-cleanup
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/couchpotato_v2/couchpotato_v2.cfg">
<INLINE>
<![CDATA[
# couchpotato v2 configuration
SERVICE="disable"
INSTALLDIR="/usr/local/couchpotato_v2"
CONFIGFILE="/boot/config/plugins/couchpotato_v2/settings.conf"
RUNAS="nobody"
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/couchpotato_v2/settings.conf">
<INLINE>
<![CDATA[
[growl]
port = 

[core]
data_dir = /usr/local/couchpotato_v2
port = 8082
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.couchpotato_v2" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh
# Start/stop/restart/enable/disable couchpotato v2.

couchpotato_start()
{
	# no-op if not enabled
	if [ $SERVICE != "enable" ]; then
		echo "CouchPotato couldn't start because isn't enabled"
		return
	fi
  
	# no-op if already running
	if [ -r /var/run/couchpotato_v2/couchpotato_v2.pid ]; then
		echo "CouchPotato already running"
		return
	fi
  
	# if directory doesn't exist or couchpotato v2 is not found, install it
	if [[ "$INSTALLDIR" != "" &&  ! -e "$INSTALLDIR/CouchPotato.py" ]]; then
		couchpotato_install
	fi
  
	CMDLINE="sudo -u $RUNAS python $INSTALLDIR/CouchPotato.py --daemon --config_file $CONFIGFILE --pid_file /var/run/couchpotato_v2/couchpotato_v2.pid"
	echo "Starting CouchPotato with parameters: $CMDLINE"
	$CMDLINE
	echo

	while [ ! -e /var/run/couchpotato_v2/couchpotato_v2.pid ]; do
		sleep 1
	done
}

couchpotato_stop()
{
	# no-op if not running
	if [ ! -r /var/run/couchpotato_v2/couchpotato_v2.pid ]; then
		echo "CouchPotato already stopped"
		return
	fi

	echo -n "Stopping CouchPotato..."
	sleep 0.5
	echo
	kill $(cat /var/run/couchpotato_v2/couchpotato_v2.pid)

	while [ -e /var/run/couchpotato_v2/couchpotato_v2.pid ]; do
		sleep 1
	done
	echo
}

couchpotato_restart()
{
	couchpotato_stop
	sleep 1
	couchpotato_start
}

couchpotato_update()
{
	couchpotato_stop
	sleep 1
	couchpotato_install
	sleep 1
	couchpotato_start
}

write_config()
{
	echo "CouchPotato writing settings..." 
	echo "# couchpotato v2 configuration" > /boot/config/plugins/couchpotato_v2/couchpotato_v2.cfg
	echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/couchpotato_v2/couchpotato_v2.cfg
	echo "INSTALLDIR=\"$INSTALLDIR\"" >> /boot/config/plugins/couchpotato_v2/couchpotato_v2.cfg
    echo "CONFIGFILE=\"$CONFIGFILE\"" >> /boot/config/plugins/couchpotato_v2/couchpotato_v2.cfg
	echo "RUNAS=\"$RUNAS\"" >> /boot/config/plugins/couchpotato_v2/couchpotato_v2.cfg
	sed -i 's!data_dir = '"`cat "$CONFIGFILE" | grep 'data_dir' | cut -d' ' -f3`"'!data_dir = '"$DATADIR"'!' "$CONFIGFILE"
	sed -i 's!port = '"`cat "$CONFIGFILE" | grep 'port = ' | cut -d' ' -f3 | awk 'NR==2'`"'!port = '"$PORT"'!' "$CONFIGFILE"
}

couchpotato_enable()
{
	# if not already enabled, enable it
	if [ "$SERVICE" != "enable" ]; then
		SERVICE=enable
		couchpotato_change_settings $1 $2 $3 $4 $5
		write_config
	fi

	# enabling also starts it
	couchpotato_start
}

couchpotato_change_settings()
{
	PORT="$2"
	INSTALLDIR="$3"
	DATADIR="$4"
	CONFIGDIR="$5"
	
	if [ $DATADIR == "" ]; then
	  $DATADIR = "$INSTALLDIR"
	fi
	
	if [ $RUNAS != $1 ]; then
		chown -R $1:users "$INSTALLDIR"
	fi
	
	RUNAS="$1"
	
	# create couchpotato v2 user if necessary
	if [[ $RUNAS != "nobody" && $RUNAS != "root" ]]; then
		if ( ! grep -q ^$RUNAS /etc/passwd ); then
	  		useradd -r -g users -d / -s /bin/false $RUNAS &> /dev/null
	  		cp /etc/passwd /etc/shadow /boot/config
		fi
	fi
}

couchpotato_disable()
{
	couchpotato_stop
	SERVICE=disable
	couchpotato_change_settings $1 $2 $3 $4 $5
	write_config
}

couchpotato_install()
{
	echo "installing latest Version of couchpotato v2"
	
	if [ ! -e "$INSTALLDIR" ]; then 
		mkdir -p $INSTALLDIR
	fi
	
	DATADIR="`cat "$CONFIGFILE" | grep 'data_dir' | cut -d' ' -f3`"
	if [ ! -e "$DATADIR" ]; then 
		mkdir -p $DATADIR
	fi
	
	cd /tmp
	git clone https://github.com/RuudBurger/CouchPotatoServer.git
	cp -Rf /tmp/CouchPotatoServer/* $INSTALLDIR
	rm -Rf /tmp/CouchPotatoServer
	chown -R $RUNAS:users "$INSTALLDIR"
}

couchpotato_datacheck() 
{
	DATADIR="`cat "$CONFIGFILE" | grep 'data_dir' | cut -d' ' -f3`"
	array=( ramfs proc tempfs sysfs )
	fs=$( stat -f -c '%T' $DATADIR )
	for i in "${array[@]}"
	do
		if [ $i = $fs ]; then
		    echo "<p style="color:red\;margin-left:10px\;"><b>WARNING:</b> Your Data Directory is not persistent and WILL NOT survive a reboot. Please locate Data Directory on disk for persistency</p>"
			break
		elif [ $i = msdos ]; then
			echo "<p style="color:red\;margin-left:10px\;"><b>WARNING:</b> Your Data Directory is located on your flash drive. This will decrease your flash drives life span!</p>"
			break
		else
			echo "<p style="color:green\;margin-left:10px\;">Your data will persist after a reboot</p>"
			break
		fi
	done
}
# read our configuration
source /boot/config/plugins/couchpotato_v2/couchpotato_v2.cfg

case "$1" in
	'start')
		couchpotato_start
	;;
	'stop')
		couchpotato_stop
	;;
	'restart')
		couchpotato_restart
	;;
	'enable')
		couchpotato_enable $2 $3 $4 $5 $6
	;;
	'disable')
		couchpotato_disable $2 $3 $4 $5 $6
	;;
	'install')
		couchpotato_install
	;;
	'update')
		couchpotato_update
	;;
	'datacheck')
		couchpotato_datacheck
	;;
	*)
		echo "usage $0 start|stop|restart|enable|disable|install|update|datacheck"
esac
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/couchpotato_v2/couchpotato_v2.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="couchpotato_logo.png"
Version="0.5"
Author="Wojciech Walaszek"
Type="php"
Title="CouchPotato v2"
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/couchpotato_v2/couchpotato_logo.png">
<LOCAL>/boot/config/plugins/couchpotato_v2/couchpotato_logo.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/couchpotato_v2/couchpotato_v2.php">
<INLINE>
<![CDATA[
<?PHP
$couchpotato_cfg = parse_ini_file( "/boot/config/plugins/couchpotato_v2/couchpotato_v2.cfg");
$couchpotato_installed = file_exists( $couchpotato_cfg["INSTALLDIR"] . "/CouchPotato.py" ) ? "yes" : "no";
$couchpotato_configfile = $couchpotato_cfg["CONFIGFILE"];
$couchpotato_datadir = trim(shell_exec( "cat \"$couchpotato_configfile\" | grep 'data_dir' | cut -d' ' -f3" ));
if ($couchpotato_installed=="yes")
{
	$couchpotato_datacheck = shell_exec ( "/etc/rc.d/rc.couchpotato_v2 datacheck" );
	$couchpotato_running = file_exists( "/var/run/couchpotato_v2/couchpotato_v2.pid") ? "yes" : "no";
	if (file_exists("$couchpotato_datadir" . "/cache/version"))
		$couchpotato_curversion = trim(shell_exec( "cat \"$couchpotato_datadir\"/cache/version | cut -d '\"' -f6- | sed 's/\(.*\)../\\1/'" ));
	else
		$couchpotato_curversion = "couldn't determine the CouchPotato v2 version, please run CouchPotato V2 first";
	$couchpotato_newversion = trim(shell_exec( "cd /tmp/ && wget -q -O feed.atom --no-check-certificate https://github.com/RuudBurger/CouchPotatoServer/commits/master.atom && cat feed.atom | sed -n 's|tag:github.com,2008:Grit::Commit/\(.*\)|\\1|p' | sed '1q;d' | cut -d' ' -f5- | sed 's/....\(.*\)...../\\1/' && rm feed.atom" ));
	$couchpotato_installdirsize = trim(shell_exec( "if [ -e $couchpotato_cfg[INSTALLDIR] ]; then du -sh $couchpotato_cfg[INSTALLDIR] | cut -f1; else echo 0; fi"));
	$couchpotato_datadirsize = trim(shell_exec( "if [ -e $couchpotato_datadir ]; then du -sh $couchpotato_datadir | cut -f1; else echo 0; fi" ));
}
//get couchpotato v2 config
if (file_exists($couchpotato_configfile))
	$couch_port = trim(shell_exec( "cat \"$couchpotato_configfile\" | grep 'port = ' | cut -d' ' -f3 | awk 'NR==2'" ));

?>
	<form name="couchpotato_settings" method="POST" action="/update.htm" target="progressFrame">
		<input type="hidden" name="cmd" value="/etc/rc.d/rc.couchpotato_v2">
		<table class="settings">
			<tr>
				<td>Enable CouchPotato v2:</td>
				<td>
					<select name="arg1" size="1"  onChange="checkINSTALLDIR(this.form);">
						<?=mk_option($couchpotato_cfg['SERVICE'], "disable", "No");?>
						<?=mk_option($couchpotato_cfg['SERVICE'], "enable", "Yes");?>
					</select>
				</td>
			</tr>
			<tr>
				<td>Install directory:</td>
				<td><input type="text" name="arg4" maxlength="60" value="<?=$couchpotato_cfg['INSTALLDIR'];?>"></td>
			</tr>
			<tr>
				<td>Data directory:</td>
				<td><input type="checkbox" name="use_data" <?=($couchpotato_datadir!=$couchpotato_cfg['INSTALLDIR'])?"checked=\"checked\"":"";?>  onChange="checkDATADIR(this.form);"> <input type="text" name="arg5" maxlength="60" value="<?=$couchpotato_datadir;?>"></td>
			</tr>
			 <tr>
        			 <td>Config file directory:</td>
         	       		<td><input type="checkbox" name="use_config" id="use_config" <?=($couchpotato_cfg['CONFIGFILE']!=$couchpotato_cfg['INSTALLDIR'])?"checked=\"checked\"":"";?> onChange="checkCONFIGFILE(this.form);"> <input type="text" name="arg6" maxlength="60" value="<?=$couchpotato_cfg['CONFIGFILE'];?>"></td>
        		 </tr>		
			<tr>
				<td>Port:</td>
				<td><input type="text" name="arg3" maxlength="40" value="<?=$couch_port;?>"></td>
			</tr>
			<tr>
				<td>Run as user:</td>
				<td>
					<select name="runas" size="1"  onChange="checkUSER(this.form);">
						<?=mk_option($couchpotato_cfg['RUNAS'], "nobody", "nobody");?>
						<?=mk_option($couchpotato_cfg['RUNAS'], "root", "root");?>
						<option value='other'<?=($couchpotato_cfg['RUNAS'] != "root" && $couchpotato_cfg['RUNAS'] != "nobody")?" selected=yes":"" ;?>>other</option>
					</select>
					<input type="text" name="arg2" maxlength="40" value="<?=$couchpotato_cfg['RUNAS'];?>">
				</td>
			</tr>
			<tr>
				<td></td>
				<td><input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</button></td>
			</tr>
		</table>
	</form>
    <hr>
<p style="font-size:16px;"><b>Additional informations:</b></p>	
<? if ($couchpotato_installed=="yes"): ?>
	<? if ($couchpotato_running=="yes"): ?>
		<p style="margin-left:10px;"><a href="http://<?=$var['NAME'];?>:<?=$couch_port;?>" target="_blank">CouchPotato v2</a> is running with version: <b><?=$couchpotato_curversion;?></b></p>
	<? else: ?>
		<p style="margin-left:10px;"><b>CouchPotato v2 is not running</b></p>
	<? endif; ?>
	<? if ($couchpotato_installdirsize!=0 && $couchpotato_installdirsize!=""): ?>
		<? if ($couchpotato_cfg["INSTALLDIR"] == $couchpotato_datadir): ?>
			<p style="margin-left:10px;">CouchPotato v2 storage memory usage: install + data directory: <b><?=$couchpotato_installdirsize?></b></p>
		<? else: ?>
			<p style="margin-left:10px;">CouchPotato v2 storage memory usage: install directory: <b><?=$couchpotato_installdirsize?></b>, data directory: <b><?=$couchpotato_datadirsize?></b></p>
		<? endif; ?>
	<? endif; ?>
	<?=$couchpotato_datacheck?>
	<? if (strcmp($couchpotato_curversion, $couchpotato_newversion)!=0 && $couchpotato_curversion!="couldn't determine the CouchPotato v2 version, please run CouchPotato V2 first"): ?>
		<form name="coucpotato_settings" method="POST" action="/update.htm" target="progressFrame">
			<input type="hidden" name="cmd" value="/etc/rc.d/rc.couchpotato_v2 update">
			<p style="font-size:14px;color:blue;margin-left:10px;">Update available to version: <b><?=$couchpotato_newversion;?></b></p>
			<table style="align:center;">
				<tr>
					<td><input type="submit" name="runCmd" value="Update"><button type="button" onClick="done();">Done</button></td>
				</tr>
			</table>
		</form>	 
	<? endif; ?>
<? else: ?>
	<p style="margin-left:10px;"><b>CouchPotato v2 is not installed</b></p>
<? endif; ?>	

<script type="text/javascript">
function checkINSTALLDIR(form)
{
	if ("<?=$couchpotato_running;?>" == "yes")
	{
		form.arg2.readOnly = true;
		form.arg3.readOnly = true;
		form.arg4.readOnly = true;		// install directory
		form.arg5.readOnly = true;		// data directory
		form.runas.disabled = true;
		form.use_data.disabled = true;
   } 
   else
   {
		form.arg2.readOnly = (form.arg1.value == "enable");
		form.arg3.readOnly = (form.arg1.value == "enable");
		form.arg4.readOnly = (form.arg1.value == "enable");
		form.arg5.readOnly = (form.arg1.value == "enable");
		form.runas.disabled = (form.arg1.value == "enable");
		form.use_data.disabled = (form.arg1.value == "enable");
   }
}

function checkUSER(form)
{
	if (form.runas.selectedIndex < 2 )
	{
		form.arg2.value = form.runas.options[form.runas.selectedIndex].value;
		form.arg2.type = "hidden";
	}
	else
	{
		form.arg2.value = "<?=$couchpotato_cfg['RUNAS'];?>";
		form.arg2.type = "text";
	}
}

function checkDATADIR(form)
{
	if (form.use_data.checked == false )
	{
		form.arg5.value = form.arg4.value;
		form.arg5.type = "hidden";
	}
	else
	{
		form.arg5.value = "<?=$couchpotato_datadir;?>";
		form.arg5.type = "text";
	}
}

function checkCONFIGFILE(form)
{
	if (form.use_config.checked == false ) {
		form.arg6.value = form.arg5.value + "/settings.conf";;
		form.arg6.type = "hidden";
	} else {
		form.arg6.value = "<?=$couchpotato_cfg['CONFIGFILE'];?>";
		form.arg6.type = "text";
	}
}

checkINSTALLDIR(document.couchpotato_settings);
checkUSER(document.couchpotato_settings);
checkDATADIR(document.couchpotato_settings);
</script>
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/couchpotato_v2/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.couchpotato_v2 start
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/couchpotato_v2/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.couchpotato_v2 stop
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/couchpotato_v2-install" Run="/bin/bash">
<INLINE>
<![CDATA[
# include our config vars
source /boot/config/plugins/couchpotato_v2/couchpotato_v2.cfg

# create couchpotato_v2-writable directory for pid file
if [ ! -e /var/run/couchpotato_v2 ]; then
  mkdir /var/run/couchpotato_v2
  chown $RUNAS:users /var/run/couchpotato_v2
  chmod 0777 /var/run/couchpotato_v2
fi

rm /tmp/couchpotato_v2-install
]]>
</INLINE>
</FILE>

<FILE Name="/var/log/plugins/couchpotato_v2">
<INLINE>
<![CDATA[

]]>
</INLINE>
</FILE>

</PLUGIN>